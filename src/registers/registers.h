/*
 * registers.h
 *
 *  Created on: 26.04.2024
 *      Author: isd
 */

#include "systemc.h"

#ifndef REGISTERS_REGISTERS_H_
#define REGISTERS_REGISTERS_H_

SC_MODULE(registers) {
	sc_in_clk clk;
	sc_in<sc_logic> reg_write;
	sc_in<sc_lv<5> > read_reg_1;
	sc_in<sc_lv<5> > read_reg_2;
	sc_in<sc_lv<5> > write_reg;
	sc_in<sc_lv<32> > write_data;
	sc_out<sc_lv<32> > read_data_1;
	sc_out<sc_lv<32> > read_data_2;

	sc_lv<32> reg_mem[32]{
					"00000000000000000000000000000000",
					"00000000000000000000000000000000",//mem 1
					"00000000000000000000000000000000",
					"00000000000000000000000000000000",
					"00000000000000000000000000000000",
					"00000000000000000000000000000000",
					"00000000000000000000000000000000",
					"00000000000000000000000000000000",
					"00000000000000000000000000000000",
					"00000000000000000000000000000000",
					"00000000000000000000000000000000",//mem 10
					"00000000000000000000000000000000",
					"00000000000000000000000000000000",
					"00000000000000000000000000000000",
					"00000000000000000000000000000000",
					"00000000000000000000000000000000",
					"00000000000000000000000000000000",
					"00000000000000000000000000000000",
					"00000000000000000000000000000000",
					"00000000000000000000000000000000",
					"00000000000000000000000000000000",//mem 20
					"00000000000000000000000000000000",
					"00000000000000000000000000000000",
					"00000000000000000000000000000000",
					"00000000000000000000000000000000",
					"00000000000000000000000000000000",
					"00000000000000000000000000000000",
					"00000000000000000000000000000000",
					"00000000000000000000000000000000",
					"00000000000000000000000000000000",
					"00000000000000000000000000000000",//mem 30
					"00000000000000000000000000000000",

	};

	void behaviour_default() {
		read_data_1.write(reg_mem[("0", read_reg_1.read()).to_int()]);
		read_data_2.write(reg_mem[("0", read_reg_2.read()).to_int()]);
	}

	void behaviour_clocked() {
		while(true) {
			wait();
			if(reg_write.read() == SC_LOGIC_1) {
				reg_mem[("0", write_reg.read()).to_int()] = write_data.read();
			}
		}
	}

	SC_CTOR(registers) {
		for(int i = 0; i < 32; ++i) {
			reg_mem[i] = sc_lv<32>(SC_LOGIC_0);
		}
		SC_METHOD(behaviour_default);
		sensitive << read_reg_1 << read_reg_2;
		SC_CTHREAD(behaviour_clocked, clk.neg());
	}
};

#endif /* REGISTERS_REGISTERS_H_ */
